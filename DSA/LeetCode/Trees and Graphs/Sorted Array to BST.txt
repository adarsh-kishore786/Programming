/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void toBST(vector<int>& nums, int start, int end, TreeNode** node) {
        if (start > end) return;
        int mid = (start + end) / 2;
        TreeNode* temp { new TreeNode() };
        temp->val = nums[mid];
        *node = temp;
        
        toBST(nums, start, mid-1, &(*node)->left);
        toBST(nums, mid+1, end, &(*node)->right);
    }
    
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        int mid = nums.size() / 2;
        TreeNode* root { new TreeNode(nums[mid]) };
        if (nums.size() > 1) {
            toBST(nums, 0, mid-1, &root->left);
            toBST(nums, mid+1, nums.size() - 1, &root->right);
        }
        
        return root;
    }
};