/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    stack<int> arr {};
public:     
    bool isValidBST(TreeNode* root, long min, long max) {
        if (!root) return true;
        
        if (!(root->val >= min && root->val <= max))
            return false;
        
        return isValidBST(root->left, min, (long)root->val-1) && isValidBST(root->right, (long)root->val+1, max);
    }
    
    bool isValidBST(TreeNode* root) {
        if (!root)
            return true;
        return isValidBST(root, INT_MIN, INT_MAX);
    }
};